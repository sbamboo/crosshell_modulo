# Crosshell Settings:
# The crosshell settings are split into "modules" theese are the top-level keys, under each module is settings for that module.
# Note: any element with key: "_choices" are auto-generated by crosshell and changes won't apply, so no need to care abt them.
# 
# Main Crosshell module
crsh:
  # Parser settings:
  Parse:
    Text:
      # If webcolor support should be enabled. [bool]
      Webcolors: true
  # Execution settings:
  Execution:
    # Whether or not Crosshell should safely handle cmdlet errors or let them get raised? [bool]
    HandleCmdletError: true
    # Should Crosshell print out the traceback for a cmdlet-error? [bool]
    PrintCmdletDebug: false
    # Should Crosshell handle newlines as new inputs? (Should newlines work like semicolons) [bool]
    SplitByNewline: true
    # Should Crosshell handle exits so an exit() statement only closes the cmdlet? [bool]
    SafelyHandleExit: true
    # Should Crosshell only allow execution of cmdlets? [bool]
    OnlyAllowCmdlets: false
  # Settings regarding fileformats:
  Formats:
    DefaultEncoding: utf-8
  # Language settings:
  Language:
    # Selected languages to load, note the priority number. [<priority_str_int>: <name_str>]
    Loaded:
      '1': en-us
    # Avaliable languages (No need to change)
    _choices: "sv-se, asset_en-us"
    # The file storing the language list: [str]
    DefaultList: '{CS_BaseDir}\assets\langlist.json'
    # The filetypes used for diffrent files: [str]
    ListFormat: json
    LangFormat: json
    # Should crosshell load "same-suffiex" languages automaticly? [bool]
    # Note: If any language ending in a loaded language should be loaded automaticly
    #       Ex: "en-us" is loaded then "somemodule_en-us" would also automaticly get loaded.
    LoadSameSuffixedLangs: false
  # Package settings:
  Packages:
    Options:
      # If set to true, crosshell will load in [CStags]...[TagEnd] configurations. [bool]
      LoadInFileHeader: false
    # The filetypes used to load for diffrent stuff
    AllowedFileTypes:
      # The filetypes to load for cmdlets: (based on their reader) [str]
      # Note: You can specify os-specific filetypes by prefixing the filetype with <os>@
      #       Os-tags can be either "win", "lnx", "mac". (Or a semicolon seppareated multitude of them like: "lnx;mac")
      #       You can also use "all" to specific all operating systems, if no tag is supplied it will work like "all".
      Cmdlets:
        INTERNAL_PYTHON:
        - py
        PLATFORM_EXECUTABLE:
        - win@exe
        - win@cmd
        - win@bat
        - lnx;mac@MIME_EXECUTABLE
      # The filetypes to load for packages: (based on their type) [str]
      # Note: os-tags are not supported here, sorry :(
      Packages:
        Modulo:
        - mpackage
        - mpack
        - csmpack
        Legacy:
        - package
        - pack
        - cspack
      # The filetypes to use for diffrent cmdlet-related files: (based on their type) [str]
      # Note: Once again no os-tag support :(
      CmdletFiles:
        Conf:
        - cfg
        - config
        - conf
        Pack:
        - json
        - cfg
        - conf
        - config
    # Reader Settings:
    Readers:
      # The file storing the loaded readers
      ReaderFile: '{CS_BaseDir}\assets\readerfiles.json'
  # Console settings:
  Console:
    # The default prefix to use in crosshell. [quote_surrounded_str]
    DefPrefix: '{dir:ensureSlash}> '
    # The default title to use in crosshell.
    DefTitle: Crosshell (Modulo)
    # Is the prefix system enabled? [bool]
    PrefixEnabled: true
    # Should the prefix show the current-working-directory? (If included in the prefix) [bool]
    PrefixShowDir: true
    # Should dynamic prefixes be allowed? (Data/Script driven prefixes from mpackages) [bool]
    DynamicPrefixes: true
    # Should dynamic-prefix generator scripts be run in restricted mode? [bool]
    RestrictDynPrefixes: false
    # Should crosshell strip ANSI sequences? [bool]
    StripAnsi: false
    # What is the formatmode for the console? [str]
    # Note: Can be "format","strip" or "off".
    #       format: Crosshell automaticly formats each output.
    #       strip:  Crosshell strips formatting sequences from the output.
    #       off:    Crosshell makes no attempt to handle formatting of output, so use a cmdlet for this.
    FormatOutMode: format
    # If crosshell should clear the terminal when it starts [bool]
    ClearOnStart: true
    Welcome:
      # Should the welcome message be shown apon startup? [bool]
      ShowOnStart: true
      # Should the version-notice be shown? [bool]
      ShowVersionNotice: true
      # Should crosshell print the profile? [bool]
      ShowProfile: true
  # Version settings:
  Version:
    # The file storing the versionData. [str]
    VerFile: '{CS_CoreDir}\version.yaml'
    # What version-file-format is the file? [str_int]
    FileFormatVer: '1'
  # Module settings:
  Modules:
    # Module settings:
    # Note: The crosshell modular-replacement system allowes mpackages to replace core-parts of crosshell, here you can select which one use.
    #       Please take into consideration the package version and crosshell version to make sure they are compatible.
    #       The selection property should be followed by the name of the replacement-module. [str]
    #       The choices are just showing the avaliable modules. (No need to change)
    Files:
      console-py:
        selection: null
        _choices: "test"
      inpparse-py:
        selection: null
        _choices: null
      exec-py:
        selection: null
        _choices: null
# Debugger settings:
crsh_debugger:
  # The scope to use for the debugger/console-logger system. [str]
  # Note: The scope is set to al-bellow including selected, so any lower scope then your selection will also be allowed.
  #       It can be defined as a semicolon seppareated list but please note that any scope bellow your heigest scope will be allowed.
  #       To exclude a scope prefix it with "!", this allowes you to use a high scope but exclude any scopes bellow.
  Scope: error
  # Execution settings that should only be changed for debugging purpuses:
  Execution:
    # Should cmdlets that specify it, be allowed to be run with "full-scope"? (the full crosshell scope) [bool]
    AllowRunAsInternal: true