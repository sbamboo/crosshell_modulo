# region ============================[Crosshell Cmdlet Python Hints. Modulo:0.0.0]============================
# This block of code creates hints/definitions for variables that are scoped into/for cmdlets.
# Any code in this block can be ignored by you as a developer and is only here to help you.
# Written/AutoGenerated by CrshDevtools V1, made by Simon Kalmi Claesson.
# Crsh.Hints.BlockIdentifier: ad3e849c-2ebe-4fe3-9c47-2cdf685ee4f6
# [Import]
from types import FunctionType,MethodType
# [General] (Main)
csSession: object
"""This the main class-instance pointing to your current crosshell session.
(Registry avaliable with `csSession.registry` which provides as dict.)"""
argv: str
'''List of arguments sent to the cmdlet.'''
sargv: str
'''String of arguments sent to the cmdlet, joined by spaces.'''
CSScriptRoot = str
'''Parent-path of the cmdlet.'''
CSScriptData = dict
'''Contains al the data crosshell knows about the cmdlet, like aliases/paths etc. (Crsh.Cmdlet.Obj)'''
CS_PackDir = str
'''Path to the packages crosshell directory. (/packages)'''
CS_CurDir = str
'''Path of the crosshells current working directory.'''
CS_BaseDir = str
'''Path to crosshells base directory. (/)'''
CS_CoreDir = str
'''Path to crosshells core directory. (/core)'''
CS_IsCaptured = bool
'''Boolean variable depending if the cmdlet's output is getting captured by the pipeline.'''
CS_InPipeline = bool
'''Boolean value stating if the cmdlet is being executed in a pipeline. (Can be used to know if the output will be piped)'''
# [General] (Mostlikely imported from globalEntries.json but some might be missing or not included)
fprint = FunctionType
"""Function that prints text through crosshells formatting system.
[Takes: <text:str>, <end:str=None>]"""
csLoadPackageData = FunctionType
"""Function that loads package data. (Can be used to gather info or effectivly reload)
[Takes: <packageList:dict>, <CS_Registry:dict>]"""
fromPath = FunctionType
"""Function to import a module from a filepath.
[Takes: <path:str>]"""
intpip = FunctionType
"""Function that runns input through pip.
[Takes: <pip_args:list>]"""
autopipImport = FunctionType
"""Function that installs a package through pip and returns its module variable.
[Takes: <moduleName:str>, <pipName:str=None>, <addPipArgsStr:str=None>, <cusPip:str=None>]"""
CS_GetEncoding = FunctionType
"""Function to get crosshells current default-encoding."""
# [Internal Exiting] (Use only if needed, only included if crosshells safe exit is enabled)
CS_oexit: object
'''crsh.int.exi: Pointing to pythons normal exit function instead of crosshells cmdlet replacement. (USE ON YOUR OWN RISK)'''
# [Internal Buffering] (Use only if needed, only included if captured)
buffer_bwrite: MethodType
"""crsh.int.buf: Function/Method that writes to crosshells buffer, but not the console. (USE ON YOUR OWN RISK)
[Takes: <text:str> <end:str=None>]"""
buffer_cwrite: MethodType
"""crsh.int.buf: Function/Method that writes to the console bypassing the buffer. (USE ON YOUR OWN RISK)
[Takes: <text:str> <end:str=None>]"""
buffer_cwrite_adv: MethodType
"""crsh.int.buf: Function/Method that writes only to the buffer, alternative to buffer_cwrite but this sets internal flags to safer but slower. (USE ON YOUR OWN RISK)
[Takes: <text:str> <end:str=None>]"""
buffer_bwrite_autoNL: MethodType
"""crsh.int.buf: Function/Method to write only to buffer and also auto handle newlines. (USE ON YOUR OWN RISK)
[Takes: <text:str> <end:str=\\n>]"""
buffer_cwrite_autoNL: MethodType
"""crsh.int.buf: Function/Method to write only to console and also auto handle newlines. (USE ON YOUR OWN RISK)
[Takes: <text:str> <end:str=\\n>]"""
CS_oinput: object
'''crsh.int.buf: Pointing to pythons normal input function instead of crosshells cmdlet replacement. (USE ON YOUR OWN RISK)'''
# [Internal Exceptions] (Use only if needed)
CrosshellDebErr: object
'''crsh.int.exc: Exception object for catching/raising crosshell debugger errors. (USE ON YOUR OWN RISK)'''
CrosshellExit: object
'''crsh.int.exc: Exception object for catching/raising crosshell exit exceptions. (USE ON YOUR OWN RISK)'''
# [Internal Advanced] (Use only if needed and if restriction mode allow for it!)
CS_Text: object
'''crsh.int.adv: Class instance of crosshells text system. (USE ON YOUR OWN RISK, IF RESTRICTIONMODE ALLOWS)'''
CS_Registry: object
'''crsh.int.adv: Class instance of crosshells registry, this is accessible through csSession. (USE ON YOUR OWN RISK, IF RESTRICTIONMODE ALLOWS)'''
CS_LastInput: str
'''crsh.int.adv: Variable with crosshells last input, warn is writeable. (USE ON YOUR OWN RISK, IF RESTRICTIONMODE ALLOWS)'''
CS_LastOutput: str
'''crsh.int.adv: Variable with crosshells last output, warn is writeable. (USE ON YOUR OWN RISK, IF RESTRICTIONMODE ALLOWS)'''
CS_PipeLine: object
'''crsh.int.adv: Class instance of crosshells pipeline. (USE ON YOUR OWN RISK, IF RESTRICTIONMODE ALLOWS)'''
CS_Inpparse: object
'''crsh.int.adv: Module instance for the input-parser. (USE ON YOUR OWN RISK, IF RESTRICTIONMODE ALLOWS)'''
CS_Exec: object
'''crsh.int.adv: Module instance for the executer. (USE ON YOUR OWN RISK, IF RESTRICTIONMODE ALLOWS)'''
CS_Console: object
'''crsh.int.adv: Module instance for the console. (USE ON YOUR OWN RISK, IF RESTRICTIONMODE ALLOWS)'''
loadPackages: FunctionType
"""crsh.int.adv: Function that can be used to load packages. (USE ON YOUR OWN RISK, IF RESTRICTIONMODE ALLOWS)
[Takes: <findFilesPathObj:crshPathObj>, <DestinationPath:str>, <packageExtensions:list>, <findTraverseDepth:int=1>, <extraExclusions:list=None>]"""
exclude_nonToFormat: FunctionType
"""crsh.int.adv: Function to exclude "non-format" expressions. (USE ON YOUR OWN RISK, IF RESTRICTIONMODE ALLOWS)
[Takes: <input_string:str>]"""
include_nonToFormat: FunctionType
"""crsh.int.adv: Function to include "non-format" expressions. (USE ON YOUR OWN RISK, IF RESTRICTIONMODE ALLOWS)
[Takes: <input_string:str>, <substring:list>]"""
removeAnsiSequences: FunctionType
"""crsh.int.adv: Function to strip ansi expressions. (USE ON YOUR OWN RISK, IF RESTRICTIONMODE ALLOWS)
[Takes: <inputString:str>]"""
writeWelcome: FunctionType
"""crsh.int.adv: Function to write crosshells welcome msg. (USE ON YOUR OWN RISK, IF RESTRICTIONMODE ALLOWS)
[Takes: <csSession:crshSessionObj>]"""
# [Remove Imports]
del FunctionType
del MethodType
# endregion ============================[Crosshell Cmdlet Python Hints. Modulo:0.0.0]============================